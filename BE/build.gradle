plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.asciidoctor.convert" version "1.5.9.2"
}

group = 'com.codesquad'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:{project-version}'
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testCompile group: 'junit', name: 'junit', version: '4.12'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
	compile group: 'com.h2database', name: 'h2', version: '1.4.199'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.4'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
	compile group: 'org.json', name: 'json', version: '20180813'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}